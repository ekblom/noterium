<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls1="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    xmlns:controls2="clr-namespace:Noterium.Controls"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls">

	<controls2:InvertedBoolToVisibility x:Key="InvertedBoolToVisibility"/>
	<Grid Background="Transparent" x:Key="PlaceholderPanel" x:Shared="false" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<StackPanel Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center">
			<Label Visibility="{Binding Path=HasItems, Converter={StaticResource InvertedBoolToVisibility}, RelativeSource={RelativeSource AncestorType={x:Type controls2:TokenizedTagControl}} }" 
					x:Name="PART_Placeholder" 
					Content="{Binding Path=Placeholder, RelativeSource={RelativeSource AncestorType={x:Type controls2:TokenizedTagControl}} }" 
					FontSize="8" Foreground="LightGray" />
		</StackPanel>
	</Grid>


	<!-- TagControl default style -->
	<Style TargetType="{x:Type controls2:TokenizedTagControl}">
		<Style.Resources>
			<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>
			<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White" />
			<LinearGradientBrush x:Key="IconBrush" EndPoint="0,1">
				<GradientStop Color="#5890f0" Offset="0" />
				<GradientStop Color="#0351d7" Offset="1" />
			</LinearGradientBrush>
		</Style.Resources>
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls2:TokenizedTagControl}">
					<Grid>
						<Border x:Name="PART_ControlBorder" MinHeight="25" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Button Content="{StaticResource PlaceholderPanel}" Grid.Row="0" Grid.Column="0" x:Name="PART_CreateTagButton" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
									<Button.Template>
										<ControlTemplate TargetType="Button">
											<ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
											<ControlTemplate.Triggers>
												<Trigger Property="IsMouseOver" Value="True">
													<Setter Property="Cursor" Value="IBeam" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</Button.Template>
								</Button>
								<ItemsPresenter Grid.Row="0" Grid.Column="0"/>
							</Grid>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEditing" Value="True">
							<Setter TargetName="PART_CreateTagButton" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_ControlBorder" Property="BorderBrush" Value="Black" />
							<!--{StaticResource HighlightBrush}-->
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />
					<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
					<Setter Property="VerticalContentAlignment" Value="Stretch"/>
					<!--<Setter Property="VerticalAlignment" Value="Top"/>-->

					<!--<Setter Property="DockPanel.Dock" Value="Left"/>-->
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel" >
			<Setter.Value>
				<ItemsPanelTemplate>
					<WrapPanel/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="TagButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                        <controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Content="{TemplateBinding Content}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   Padding="{TemplateBinding Padding}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   RecognizesAccessKey="True"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.ContentCharacterCasing)}" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="Transparent" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush2}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style TargetType="{x:Type controls2:TokenizedTagItem}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="MinHeight" Value="20" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls2:TokenizedTagItem}">
					<Button x:Name="PART_TagButton" Content="{TemplateBinding Text}" Style="{StaticResource TagButtonStyle}" Margin="0" Padding="0">
						<Button.Template>
							<ControlTemplate TargetType="Button">
								<Border x:Name="PART_TagBorder" Height="20" Margin="0" Padding="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="#01FFFFFF" BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" CornerRadius="10">
									<Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" >
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="20" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>

										<Ellipse Grid.Column="0" Width="10" Height="10" VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="1">
											<Ellipse.Fill>
												<SolidColorBrush Color="{Binding Color}" />
											</Ellipse.Fill>
											<Ellipse.Stroke>
												<SolidColorBrush Color="{Binding Color}" />
											</Ellipse.Stroke>
										</Ellipse>

										<ContentPresenter Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" />
										<Button x:Name="PART_DeleteTagButton" Grid.Column="2"  Margin="3,0" VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="Hidden"  >
											<Button.Template>
												<ControlTemplate>
													<Grid Height="10" Width="10" Background="#01FFFFFF">
														<Path Stretch="Uniform" ClipToBounds="True" Stroke="{StaticResource HighlightBrush}" StrokeThickness="2" Data="M 85.364473,6.9977109 6.0640998,86.29808 6.5333398,85.76586 M 6.9926698,7.4977169 86.293043,86.79809 85.760823,86.32885"  />
													</Grid>
												</ControlTemplate>
											</Button.Template>
										</Button>
									</Grid>
								</Border>
								<ControlTemplate.Triggers>
									<Trigger Property="IsMouseOver" Value="True">
										<Setter Property="Foreground" Value="{StaticResource HighlightBrush}" />
										<Setter TargetName="PART_DeleteTagButton" Property="Visibility" Value="Visible" />
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Button.Template>
					</Button>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEditing" Value="True">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type controls2:TokenizedTagItem}">

							<controls1:AutoCompleteBox x:Name="PART_InputBox"
                                                     Margin="0" Padding="0 4" VerticalAlignment="Center"
                                                     Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" 
                                                     ItemsSource="{Binding AllTags, RelativeSource={RelativeSource AncestorType={x:Type controls2:TokenizedTagControl}}}"
                                                     IsTextCompletionEnabled="False"
                                                     FilterMode="ContainsOrdinal"
													 
													 FontFamily="{DynamicResource ContentFontFamily}" 
													 FontSize="{DynamicResource ContentFontSize}"
													 Foreground="{DynamicResource BlackColorBrush}"
													 BorderBrush="{DynamicResource TextBoxBorderBrush}"
													 controls:ControlsHelper.FocusBorderBrush="{DynamicResource TextBoxFocusBorderBrush}"
													 controls:ControlsHelper.MouseOverBorderBrush="{DynamicResource TextBoxMouseOverBorderBrush}"
													  
                                                     />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>